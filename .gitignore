#OS junk files
[Tt]humbs.db
*.DS_Store
*.csproj
*.sqlite
*.ldf

#Visual Studio files
*.[Oo]bj
*.user
*.aps
*.pch
*.vspscc
*.vssscc
*_i.c
*_p.c
*.ncb
*.suo
*.tlb
*.tlh
*.bak
*.[Cc]ache
*.ilk
*.log
*.lib
*.sbr
*.sdf
*.opensdf
*.unsuccessfulbuild
ipch/
[Oo]bj/
[Bb]in
[Dd]ebug*/
[Rr]elease*/
Ankh.NoLoad

#MonoDevelop
*.pidb
*.userprefs

#Tooling
_ReSharper*/
*.resharper
[Tt]est[Rr]esult*
*.sass-cache

#Project files
[Bb]uild/

#Subversion files
.svn

# Office Temp Files
~$*

# vim Temp Files
*~

#NuGet
packages/
*.nupkg

#ncrunch
*ncrunch*
*crunch*.local.xml

# visual studio database projects
*.dbmdl

#Test files
*.testsettings

git visual-studio visual-studio-2012 gitignore ignore
share|improve this question
	
edited Oct 27 '13 at 20:49

	
community wiki

23 revs, 18 users 46%
nik.shornikov
	
1 	 
	
Related question: stackoverflow.com/questions/72298/… –  Greg Hewgill Jan 27 '10 at 1:35
   	 
	
There's also a topic on this for Hg: stackoverflow.com/questions/34784/… . Don't know if that config is directly transferable to git though. –  Martin Su Jan 27 '10 at 2:03
1 	 
	
I made this into a community wiki, and have consolidated all existing answers into the post. Please contribute as you see fit! –  Martin Su Jan 29 '10 at 1:00
2 	 
	
I would be careful ignoring .exe and .pdb's, you may inadvertently ignore tooling that you store with your source (nant, nunit gui, etc...). –  James Gregory May 21 '10 at 13:32
2 	 
	
@murki - looks like this is the answer: coderjournal.com/2011/12/… –  Ronnie Overby Jan 25 '12 at 19:19
show 8 more comments
14 Answers
active oldest votes
up vote 195 down vote
	

There is an official repository of gitignore files at https://github.com/github/gitignore.

The .gitignore for visual studio can be found here: https://github.com/github/gitignore/blob/master/VisualStudio.gitignore
share|improve this answer
	
edited Jan 30 '13 at 23:16

	
community wiki

3 revs
Chronial
	add comment
up vote 78 down vote
	

I use the following .gitignore for C# projects. Additional patterns are added as and when they are needed.

[Oo]bj
[Bb]in
*.user
*.suo
*.[Cc]ache
*.bak
*.ncb
*.log 
*.DS_Store
[Tt]humbs.db 
_ReSharper.*
*.resharper
Ankh.NoLoad

share|improve this answer
	
answered Jan 27 '10 at 1:57

	
community wiki

Lachlan Roche
	
1 	 
	
Disagree with *.resharper. Files matching *.ReSharper.user should be ignored, but that's catered for by the *.user rule above. –  Drew Noakes Jul 9 '12 at 19:25
1 	 
	
@DrewNoakes: What are the ReSharper files that you believe should be revision controlled? –  Per Lundberg Oct 11 '13 at 19:48
add comment
up vote 27 down vote
	

While you should keep your NuGet packages.config file, you should exclude the packages folder:

#NuGet
packages/

I typically don't store binaries, or anything generated from my source, in source control. There are differing opinions on this however. If it makes things easier for your build system, do it! I would however, argue that you are not versioning these dependencies, so they will just take up space in your repository. Storing the binaries in a central location, then relying on the packages.config file to indicate which version is needed is a better solution, in my opinion.
share|improve this answer
	
edited Jan 4 '12 at 15:17

	
community wiki

2 revs
sgriffinusa
	
3 	 
	
anyone care to elaborate on why you'd want to exclude the packages folder? doesn't it make sense to include the packages for the build server to have the dependencies? –  Joel Martinez Jan 3 '12 at 2:51
2 	 
	
@JoelMartinez I've updated my answer to address your comment. –  sgriffinusa Jan 4 '12 at 15:17
   	 
	
thanks, that's a good update –  Joel Martinez Jan 4 '12 at 19:56
13 	 
	
It's worth noting that the NuGet team implemented the 'package restore' feature for exactly this problem. There's a document on the NuGet site which explains the feature and describes how to use it in Visual Studio. –  ajk Mar 6 '12 at 19:54
4 	 
	
If you ignore packages and are using nuget package restore, it's helpful to allow nuget.exe. When someone downloads, this tells helps VS tell that the feature has been enabled for the solution: !NuGet.exe <- do not ignore this file. –  danludwig Jun 25 '12 at 18:45
show 1 more comment
up vote 16 down vote
	

For those interested in what Microsoft thinks should be included in the gitignore, here's the default one which Visual Studio 2013 RTM automatically generates when creating a new Git-Repository:

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.sln.docstates

# Build results

[Dd]ebug/
[Rr]elease/
x64/
build/
[Bb]in/
[Oo]bj/

# Enable "build/" folder in the NuGet Packages folder since NuGet packages use it for MSBuild targets
!packages/*/build/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

*_i.c
*_p.c
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.log
*.scc

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler
*.psess
*.vsp
*.vspx

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
*.ncrunch*
.*crunch*.local.xml

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.Publish.xml

# NuGet Packages Directory
## TODO: If you have NuGet Package Restore enabled, uncomment the next line
#packages/

# Windows Azure Build Output
csx
*.build.csdef

# Windows Store app package directory
AppPackages/

# Others
sql/
*.Cache
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.[Pp]ublish.xml
*.pfx
*.publishsettings

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file to a newer
# Visual Studio version. Backup files are not needed, because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
App_Data/*.mdf
App_Data/*.ldf


#LightSwitch generated files
GeneratedArtifacts/
_Pvt_Extensions/
ModelManifest.xml

# =========================
# Windows detritus
# =========================

# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Mac desktop service store files
.DS_Store

See: Add a default .gitignore file on MSDN
share|improve this answer
	
answered Oct 27 '13 at 23:55

	
community wiki

Mobiletainment
	
1 	 
	
I particularly enjoyed reading that MS refers to it's own system files as "detritus". How beautifully ironic. –  Robino Mar 17 at 17:05
add comment
up vote 8 down vote
	

Added InstallShield ignores for the build deployment. InstallShield is the new direction Microsoft is headed over Visual Studio Installer, so we've started using it on all new projects. This added line removes the SingleImage installation files. Other InstallShield types may include DVD distribution among others. You may want to add those directory names or just [Ee]xpress/ to prevent any InstallShield LE deployment files from getting into the repo.

Here is our .gitignore for VS2010 C# projects using Install Shield LE with SingleImage deployments for the installer:

#OS junk files
[Tt]humbs.db
*.DS_Store

#Visual Studio files
*.[Oo]bj
*.exe
*.pdb
*.user
*.aps
*.pch
*.vspscc
*.vssscc
*_i.c
*_p.c
*.ncb
*.suo
*.tlb
*.tlh
*.bak
*.[Cc]ache
*.ilk
*.log
*.lib
*.sbr
*.sdf
ipch/
obj/
[Bb]in
[Dd]ebug*/
[Rr]elease*/
Ankh.NoLoad

#InstallShield
[Ss]ingle[Ii]mage/
[Dd][Vv][Dd]-5/
[Ii]nterm/

#Tooling
_ReSharper*/
*.resharper
[Tt]est[Rr]esult*

#Project files
[Bb]uild/

#Subversion files
.svn

# Office Temp Files
~$*
